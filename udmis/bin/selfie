#!/bin/bash -e

gcloud container clusters get-credentials ${GCP_CLUSTER} --region ${GCP_REGION} --project ${GCP_PROJECT}

echo Entering udmis-broker message loop

mosquitto_sub -h udmis-broker -t udmis-broker/+/+ | jq --unbuffered --indent 0 . | while read input; do
    echo Processing $input
    update_to=$(jq -r .message.setup.update_to <<< $input || true)
    timestamp=$(jq -r .message.timestamp <<< $input || true)
    if [[ -z $update_to || $update_to == null ]]; then
        echo Message $timestamp ignoring state update with no update_to field
    else
        image_tag=ghcr.io/$REPO_NAME/udmi:$update_to
        echo Message $timestamp updating install to version $update_to, image $image_tag
        (cd udmi && git fetch origin --refetch && git switch ${update_to:1:9} --detach)
        kubectl get deployment udmis-pods -o json > old.json
        prev_image=$(jq -r .spec.template.spec.containers[0].image old.json)
        echo Previous image $prev_image
        jq . old.json | sponge old.json
        jq .spec.template.spec.containers[0].image=\"$image_tag\" old.json > new.json
        echo Applying changes to k8s deployment:
        diff old.json new.json
        kubectl apply -f new.json
        echo
        kubectl get pods
        sleep 10
        echo
        kubectl get pods
        echo Done with udmis update
    fi
    echo Waiting for next state update
done

echo Message loop terminated
